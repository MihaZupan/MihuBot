name: build-mihubot

on:
  push:
    paths-ignore:
      - 'StorageService/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET 10.0
      run: |
        sudo apt install -y wget && \
        wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh && \
        sudo chmod +x ./dotnet-install.sh && \
        #sudo ./dotnet-install.sh --channel 10.0 --quality daily --install-dir dotnet-latest && \
        sudo ./dotnet-install.sh --version 10.0.100-preview.7.25351.101 --install-dir dotnet-latest && \
        dotnet-latest/dotnet --info

    - name: Dotnet restore
      run: dotnet-latest/dotnet restore MihuBot

    - name: Dotnet publish
      run: dotnet-latest/dotnet publish MihuBot -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -o artifacts -p:SourceRevisionId=${GITHUB_SHA}

    - name: Copy Regex source generator
      run: cp dotnet-latest/packs/Microsoft.NETCore.App.Ref/*/analyzers/dotnet/cs/System.Text.RegularExpressions.Generator.dll artifacts

    - name: Compress artifacts
      run: tar -cvzf artifacts.tar.gz artifacts

    - name: Upload to VM
      run: "curl -X POST -H \"X-Run-Number: ${{ github.run_number }}\" -H \"X-Update-Token: ${{ secrets.UPDATE_TOKEN }}\" --data-binary @artifacts.tar.gz \"https://mihubot.xyz/Management/Deployed\""

    - name: Pause
      run: sleep 60

    - name: Test deployment
      run: "wget https://mihubot.xyz/"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: publish-${{ github.run_number }}
        path: artifacts.tar.gz
