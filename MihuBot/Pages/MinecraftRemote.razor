@page "/minecraft-remote"
@attribute [Authorize]
@inject IPermissionsService permissions
@inject MinecraftRCON minecraftRCON

<form @onsubmit="SendCommandAsync">
    <div class="form-group">
        <div class="form-group input-group mb-3">
            <input @bind="currentValue" type="text" class="form-control" placeholder="Command" aria-label="Command" aria-describedby="basic-addon2">
            <div class="input-group-append">
                <button @onclick="SendCommandAsync" class="btn btn-outline-secondary" type="button">Send</button>
            </div>
        </div>

        @if (lastResponse is not null)
        {
            <div class="alert alert-success" style="white-space: pre-wrap" role="alert">@lastResponse</div>
        }

        @if (working)
        {
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        }

        @if (exception is not null)
        {
            <div class="alert alert-danger" style="white-space: pre-wrap" role="alert">@exception</div>
        }
    </div>
</form>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private ulong userId;
    private string currentValue;
    private string lastResponse;
    private string exception;
    private bool working;

    protected override async Task OnInitializedAsync()
    {
        userId = (await authenticationState).User.GetDiscordUserId();
    }

    private async Task SendCommandAsync()
    {
        if (string.IsNullOrEmpty(currentValue))
            return;

        try
        {
            working = true;
            exception = null;
            string message = currentValue;
            currentValue = null;

            if (permissions.HasPermission("mc", userId))
            {
                string response = await minecraftRCON.SendCommandAsync(message.Trim());
                response = response.Trim();
                lastResponse = response.Length == 0 ? "Success (empty response)" : response;
            }
            else
            {
                exception = "Missing permission: mc";
            }
        }
        catch (Exception ex)
        {
            lastResponse = null;
            exception = ex.ToString();
        }
        finally
        {
            working = false;
        }
    }
}
